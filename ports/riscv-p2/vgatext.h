// automatically generated by spin2cpp v3.9.27-beta-2f18e78b on Wed May 22 18:47:41 2019
// command line: /home/ersmith/Parallax/spin2cpp/build/spin2cpp --p2 --ccode vgatext.spin2 

#ifndef vgatext_Class_Defined__
#define vgatext_Class_Defined__

#include <stdint.h>
#include "vga_tile_driver.h"

#define VGATEXT_PIXEL_CLOCK_FREQ (40000000)
// (8*100 == 800)
#define VGATEXT_COLS (100)
// (36*16 == 576); for 800x600 add 12 blank lines to top and bottom
#define VGATEXT_ROWS (36)
#define VGATEXT_FONT_HEIGHT (16)
#define VGATEXT_STATE_NORMAL (0)
#define VGATEXT_STATE_ESCAPE (1)
#define VGATEXT_STATE_CSI (2)
#define VGATEXT_MAX_ESC_ARGS (8)
#define VGATEXT_CHAR_INVERSE (1)
#define VGATEXT_CHAR_BOLD (2)
#define VGATEXT_DEFAULT_FG_COLOR (-256)
#define VGATEXT_DEFAULT_BG_COLOR (0)
#define VGATEXT_PIXSHIFT (31)
#ifndef Tuple2__
  struct tuple2__ { int32_t v0;  int32_t v1; };
# define Tuple2__ struct tuple2__
#endif


typedef struct vgatext {
  volatile int32_t 	params[40];
  volatile int32_t 	screen_buffer[((VGATEXT_COLS * VGATEXT_ROWS) * 2)];
  vga_tile_driver 	vga;
// cursor position
  int32_t 	curx, cury;
  int32_t 	savex, savey;
// current color
  int32_t 	bgcolor, fgcolor;
  int32_t 	state;
  int32_t 	screenptr;
  int32_t 	args[VGATEXT_MAX_ESC_ARGS];
  int32_t 	argidx;
  int32_t 	char_effects;
  char 	buf[32];
} vgatext;

  int32_t vgatext_start(vgatext *self, int32_t pinbase);
  void vgatext_stop(vgatext *self);
  void vgatext_tx(vgatext *self, int32_t c);
  void vgatext_glyphat(vgatext *self, int32_t x, int32_t y, int32_t ch, int32_t fgcol, int32_t bgcol);
  void vgatext_invertcurchar(vgatext *self);
  void vgatext_cls(vgatext *self);
  void vgatext_str(vgatext *self, const char *s);
  void vgatext_num(vgatext *self, int32_t val, int32_t base, int32_t signflag, int32_t digitsneeded);
  void vgatext_dec(vgatext *self, int32_t val);
  void vgatext_decuns(vgatext *self, int32_t val, int32_t digits);
  void vgatext_hex(vgatext *self, int32_t val, int32_t digits);
  void vgatext_nl(vgatext *self);
#endif
